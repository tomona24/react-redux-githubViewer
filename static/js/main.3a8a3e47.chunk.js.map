{"version":3,"sources":["reducers.js","actions.js","store.js","components/Styles.js","components/atoms/TableCell.js","components/atoms/Button.js","components/atoms/Label.js","components/atoms/TextArea.js","components/atoms/TextBar.js","components/molecules/ModalDiv.js","components/molecules/Table.js","components/molecules/IssueHeader.js","components/organisms/IndexStructure.js","container/IssueContainer.js","components/pages/PullRequest.js","components/pages/Profile.js","components/atoms/TabIndex.js","components/molecules/TabIndices.js","components/pages/IssueWithTab.js","components/pages/Toppage.js","components/molecules/MenuList.js","components/atoms/NavItem.js","components/molecules/NavList.js","components/organisms/Header.js","App.js","serviceWorker.js","index.js"],"names":["initialIssues","id","title","detail","status","author","createdDate","updatedDate","issueReducer","state","action","type","issue","filter","map","store","createStore","SMALL","DEFAULT","MIDDLE","LARGE","HEADER","DARK","WHITE","PRIMARY","SECONDARY","LIGHT","BLUE","LIGHTBLUE","TableCell","props","text","width","Div","TableCheckBoxCell","onClick","checked","styled","div","Styles","Button","ButtonDiv","Label","H2","Logo","H1","href","MenuLabel","H3","h2","a","Input","textarea","TextArea","getTheValue","placeholder","useState","userInput","setUserInput","name","value","onChange","event","target","input","TextBar","customStyles","content","display","height","padding","margin","transform","initialNewIssueState","hide","header","ModalDiv","handleSubmit","editIssue","isModalOpen","setIsModalOpen","newIssue","setNewIssue","headTitle","buttonText","isClose","closeModal","isOpen","onRequestClose","style","updateIssue","selected","createNewIssue","IssueList","issues","checkedIssue","researchWord","handleCheckIssue","uploadEditIssue","openModal","filteredIssues","toLowerCase","indexOf","issueRows","Tr","key","length","TableHeader","onWholeCheck","setChecked","TableContainer","Table","handleCheckAll","isChecked","newCheckedIssue","forEach","IssueHeader","setNewResearchWord","submitAddNewIssue","submitDeleteIssue","Container","IndexStructure","addNewIssue","deleteChosenIssue","setResearchWord","setCheckedIssue","word","filterWord","Object","keys","IssueContainer","connect","dispatch","addIssue","PullRequest","bold","direction","Profile","src","alt","textDecoration","color","TabIndex","to","changeSelected","TabIndices","isIssue","setIsIssue","changeCurrent","IssueWithTab","currentActive","setCurrentActive","Toppage","exact","path","component","MenuItems","MenuList","Item","NavItem","NavItems","hidden","NavList","toggle","Awesome","Header","setToggle","className","Modal","setAppElement","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yTAwCMA,EAAgB,CA9BL,CACfC,GAAI,aACJC,MAAO,MACPC,OAAQ,YACRC,OAAQ,SACRC,OAAQ,OACRC,YAAa,SACbC,YAAa,UAGG,CAChBN,GAAI,aACJC,MAAO,MACPC,OAAQ,YACRC,OAAQ,SACRC,OAAQ,OACRC,YAAa,SACbC,YAAa,UAGG,CAChBN,GAAI,aACJC,MAAO,MACPC,OAAQ,YACRC,OAAQ,SACRC,OAAQ,OACRC,YAAa,SACbC,YAAa,WAoBAC,EAfM,WAAoC,IAAnCC,EAAkC,uDAA1BT,EAAeU,EAAW,uCACtD,OAAQA,EAAOC,MACb,IC3CqB,YD4CnB,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,QAC3B,IC5CwB,eD6CtB,OAAOH,EAAMI,QAAO,SAACD,GAAD,OAAWA,EAAMX,KAAOS,EAAOT,MACrD,IC7CsB,aD8CpB,OAAOQ,EAAMK,KAAI,SAACF,GAAD,OACfA,EAAMX,KAAOS,EAAOE,MAAMX,GAAKS,EAAOE,MAAQA,KAElD,QACE,OAAOH,IEhDEM,EAFDC,YAAYR,G,mCCHX,EACF,CAAES,MAAO,GAAIC,QAAS,GAAIC,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,IADvD,EAEA,qBAFA,EAGD,CAAEC,KAAM,UAAWC,MAAO,QAHzB,EAIN,CAAEC,QAAS,mBAAoBC,UAAW,oBAJpC,EAKK,CAChBH,KAAM,OACNI,MAAO,UACPC,KAAM,UACNC,UAAW,WATA,EAWC,qBAXD,EAYE,M,yOCPV,IAAMC,EAAY,SAACC,GAAW,IAC3BC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OAAO,kBAACC,EAAD,CAAKD,MAAOA,GAAQD,IAGhBG,EAAoB,SAACJ,GAAW,IACnCK,EAA4BL,EAA5BK,QAASC,EAAmBN,EAAnBM,QAASJ,EAAUF,EAAVE,MAC1B,OACE,kBAACC,EAAD,CAAKE,QAASA,EAASH,MAAOA,GAC5B,2BAAOrB,KAAK,WAAWyB,QAASA,MAKhCH,EAAMI,IAAOC,IAAV,KAIE,SAACR,GAAD,OAAYA,EAAME,MAAQF,EAAME,MAAQ,UAEpCO,EAAiBrB,QACfqB,EACYA,G,mVCtBtB,IAAMC,EAAS,SAACV,GAAW,IACxBC,EAAwBD,EAAxBC,KAAMI,EAAkBL,EAAlBK,QAASxB,EAASmB,EAATnB,KACvB,OACE,kBAAC8B,EAAD,CAAWN,QAASA,EAASxB,KAAMA,GAChCoB,IAsBDU,EAAYJ,IAAOC,IAAV,IAOEC,EACFA,EAAiBrB,QAEbqB,GACR,SAACT,GAAD,MACQ,YAAfA,EAAMnB,MAAqC,cAAfmB,EAAMnB,KAAuB,OAAS,UACtD,SAACmB,GAAD,MAEG,YAAfA,EAAMnB,KACF4B,EAAaf,QACE,cAAfM,EAAMnB,KACN4B,EAAad,UACb,QACW,SAACK,GAAD,MAEA,aAAfA,EAAMnB,KACF,6BACe,cAAfmB,EAAMnB,KACN,6BACA,Q,2lBCpDD,IAAM+B,EAAQ,SAACZ,GAAW,IACvBC,EAASD,EAATC,KACR,OAAO,kBAACY,EAAD,KAAKZ,IAGDa,EAAO,WAClB,OAAO,kBAACC,EAAD,CAAIC,KAAK,IAAT,kBAGIC,EAAY,SAACjB,GAAW,IAC3BC,EAASD,EAATC,KACR,OAAO,kBAACiB,EAAD,CAAIF,KAAK,IAAIf,IAGhBY,EAAKN,IAAOY,GAAV,IAIOV,EAAiBnB,MACfmB,GAIXM,EAAKR,IAAOa,EAAV,IAIGX,EAAkBhB,MACdgB,EAAiBlB,OACfkB,GAIXS,EAAKX,IAAOa,EAAV,IAIGX,EAAkBhB,MACdgB,EAAiBpB,OACfoB,G,wOCvCjB,IAqBMY,EAAQd,IAAOe,SAAV,IAKIb,EAAiBrB,QACfqB,EACEA,EACGA,GASPc,EAtCE,SAACvB,GAAW,IACnBwB,EAAmCxB,EAAnCwB,YAAaC,EAAsBzB,EAAtByB,YAAaxB,EAASD,EAATC,KADR,EAEQyB,mBAASzB,GAFjB,mBAEnB0B,EAFmB,KAERC,EAFQ,KAU1B,OACE,kBAACP,EAAD,CACEI,YAAaA,EACbtD,GAAG,YACH0D,KAAK,YACLC,MAAOH,EACPI,SAZiB,SAACC,GAAW,IACvBF,EAAUE,EAAMC,OAAhBH,MACRF,EAAaE,GACbN,EAAYM,O,wOCPhB,IAqBMT,EAAQd,IAAO2B,MAAV,IAKIzB,EAAiBrB,QACfqB,EACEA,EACGA,GASP0B,EAtCC,SAACnC,GAAW,IAClBwB,EAAmCxB,EAAnCwB,YAAaC,EAAsBzB,EAAtByB,YAAaxB,EAASD,EAATC,KADT,EAESyB,mBAASzB,GAFlB,mBAElB0B,EAFkB,KAEPC,EAFO,KAUzB,OACE,kBAAC,EAAD,CACEH,YAAaA,EACb5C,KAAK,OACLgD,KAAK,YACLC,MAAOH,EACPI,SAZiB,SAACC,GAAW,IACvBF,EAAUE,EAAMC,OAAhBH,MACRF,EAAaE,GACbN,EAAYM,O,8KCHhB,IAEMM,EAAe,CACnBC,QAAS,CACPC,QAAS,QACTpC,MAAO,QACPqC,OAAQ,OACRC,QAAS,OACTC,OAAQ,YACRC,UAAW,0BAITC,EAAuB,CAC3BxE,GAAI,GACJC,MAAO,GACPC,OAAQ,GACRC,OAAQ,OACRC,OAAQ,GACRC,YAAa,GACbC,YAAa,IAsFT0B,EAAMI,IAAOC,IAAV,KACI,SAACR,GAAD,OAAYA,EAAM4C,KAAO,OAAS,UAK9B,SAAC5C,GAAD,OAAYA,EAAM6C,OAAS,IAAM,OAmBnCC,GA5GE,SAAC9C,GAAW,IACnB+C,EAAyD/C,EAAzD+C,aAAcC,EAA2ChD,EAA3CgD,UAAWC,EAAgCjD,EAAhCiD,YAAaC,EAAmBlD,EAAnBkD,eADpB,EAEMxB,mBAASsB,GAAaL,GAF5B,mBAEnBQ,EAFmB,KAETC,EAFS,KAGpBC,EAAYL,EAAY,0BAAa,0BACrCM,EAAaN,EAAY,eAAO,MAChCO,EAA8B,UAApBJ,EAAS7E,OAEnBkF,EAAa,WACjBN,GAAe,IAmCjB,OACE,6BACE,kBAAC,IAAD,CACEO,OAAQR,EACRS,eAAgBF,EAChBG,MAAOvB,GAEP,kBAAC,EAAD,CAAOnC,KAAMoD,IACb,kBAAC,EAAD,CAAOpD,KAAK,6BACZ,kBAAC,EAAD,CACE9B,GA5EI,QA6EJqD,YA9BY,SAACG,GACnB,IAAMiC,EAAW,eAAQT,GACzBS,EAAYxF,MAAQuD,EACpByB,EAAYQ,IA4BN3D,KAAMkD,EAAS/E,MACfqD,YAAY,mFAEd,kBAAC,EAAD,CAAOxB,KAAK,iBACZ,kBAAC,EAAD,CACE9B,GAlFK,SAmFLqD,YA/Ba,SAACG,GACpB,IAAMiC,EAAW,eAAQT,GACzBS,EAAYvF,OAASsD,EACrByB,EAAYQ,IA6BN3D,KAAMkD,EAAS9E,OACfoD,YAAY,uEAEd,kBAAC,EAAD,CAAKmB,MAAOI,GAAZ,iCAEE,4BAAQnB,KAAK,SAASE,SA/BT,SAACC,GAAW,IACvBF,EAAUE,EAAMC,OAAhBH,MACF8B,EAAW,eAAQT,GACzBS,EAAYtF,OAASwD,EACrBsB,EAAYQ,KA4BJ,4BAAQ9B,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAQ+B,SAAUN,GAAhC,WAKJ,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQlD,QAhED,WACb,IAAMyD,EAAc,eAAQX,GACvBH,IACHc,EAAexF,OAAS,KACxBwF,EAAevF,OAAS,KACxBuF,EAAetF,YAAc,MAC7BsF,EAAe3F,GAAK2F,EAAe1F,MAAQ0F,EAAetF,aAE5DsF,EAAerF,YAAc,eAC7BsE,EAAae,GACbN,KAsD+BvD,KAAMqD,EAAYzE,KAAK,YAChD,kBAAC,EAAD,CAAQwB,QAASmD,EAAYvD,KAAK,2B,ytBCrGrC,IAAM8D,GAAY,SAAC/D,GAAW,IAEjCgE,EAKEhE,EALFgE,OACAC,EAIEjE,EAJFiE,aACAC,EAGElE,EAHFkE,aACAC,EAEEnE,EAFFmE,iBACAC,EACEpE,EADFoE,gBANgC,EASI1C,oBAAS,GATb,mBAS3BuB,EAT2B,KASdC,EATc,KAU5BmB,EAAY,WAChBnB,GAAe,IAGXoB,EAAiBN,EAAOjF,QAAO,SAACD,GACpC,OAAyD,IAArDA,EAAMV,MAAMmG,cAAcC,QAAQN,IAG/BpF,KAGH2F,EAAYH,EAAetF,KAAI,SAACF,GAAW,IACvCV,EAAoDU,EAApDV,MAAOE,EAA6CQ,EAA7CR,OAAQC,EAAqCO,EAArCP,OAAQC,EAA6BM,EAA7BN,YAAaC,EAAgBK,EAAhBL,YAI5C,OACE,kBAACiG,GAAD,KACE,kBAAC,EAAD,CACErE,QANc,WAClB8D,EAAiBrF,IAMbwB,QAAS2D,EAAanF,EAAMX,IAC5B+B,MAAM,SAER,kBAAC,GAAD,CAAKyE,IAAKvG,EAAOiC,QAASgE,GACxB,kBAAC,EAAD,CAAWpE,KAAM7B,EAAO8B,MAAM,QAC9B,kBAAC,EAAD,CAAWD,KAAM3B,IACjB,kBAAC,EAAD,CAAW2B,KAAM1B,IACjB,kBAAC,EAAD,CAAW0B,KAAMzB,IACjB,kBAAC,EAAD,CAAWyB,KAAMxB,KAEnB,kBAAC,GAAD,CACEsE,aAAcqB,EACdnB,YAAaA,EACbC,eAAgBA,EAChBrE,KAAK,OACLmE,UAAWlE,QAKnB,GAA8B,IAA1BwF,EAAeM,OAAc,CAE/B,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAW3E,KAHE,yDAGcC,MAAM,UAIvC,OAAOuE,GAGHI,GAAc,SAAC7E,GAAW,IACtB8E,EAAiB9E,EAAjB8E,aADqB,EAECpD,oBAAS,GAFV,mBAEtBpB,EAFsB,KAEbyE,EAFa,KAO7B,OACE,kBAACL,GAAD,KACE,kBAAC,EAAD,CAAmBrE,QANP,WACdyE,GAAcxE,GACdyE,GAAYzE,IAI2BA,QAASA,EAASJ,MAAM,SAC7D,kBAAC,GAAD,CAAK2C,QAAM,GACT,kBAAC,EAAD,CAAW5C,KAAK,GAAGC,MAAM,QACzB,kBAAC,EAAD,CAAWD,KAAK,mCAChB,kBAAC,EAAD,CAAWA,KAAK,uBAChB,kBAAC,EAAD,CAAWA,KAAK,6BAChB,kBAAC,EAAD,CAAWA,KAAK,gCAmElBE,GAAMI,IAAOC,IAAV,MAKQ,SAACR,GAAD,OAAYA,EAAM6C,OAAS,IAAM,OAG5C6B,GAAKnE,YAAOJ,GAAPI,CAAH,KAEUE,EAAwBX,WAIpCkF,GAAiBzE,IAAOC,IAAV,KAIEC,EACHA,EAQDA,EAAwBb,MAClBa,GAMTwE,GA/FD,SAACjF,GAAW,IAEtBgE,EAMEhE,EANFgE,OACAE,EAKElE,EALFkE,aACAD,EAIEjE,EAJFiE,aACAiB,EAGElF,EAHFkF,eACAf,EAEEnE,EAFFmE,iBACAC,EACEpE,EADFoE,gBAWF,OACE,kBAACY,GAAD,KACE,kBAAC,GAAD,CAAaF,aAXE,SAACK,GAClB,IAAIC,EAAe,eAAQnB,GACvBkB,EACFnB,EAAOqB,SAAQ,SAACvG,GAAD,OAAYsG,EAAgBtG,EAAMX,IAAMW,KAEvDsG,EAAkB,GAEpBF,EAAeE,MAKb,kBAAC,GAAD,CACEpB,OAAQA,EACRC,aAAcA,EACdC,aAAcA,EACdC,iBAAkBA,EAClBC,gBAAiBA,M,iLCtGzB,IAsBMjE,GAAMI,IAAOC,IAAV,MAMQ,SAACR,GAAD,OAAYA,EAAM6C,OAAS,IAAM,OASnCyC,GArCK,SAACtF,GAAW,IACtBuF,EAA6DvF,EAA7DuF,mBAAoBC,EAAyCxF,EAAzCwF,kBAAmBC,EAAsBzF,EAAtByF,kBADlB,EAES/D,oBAAS,GAFlB,mBAEtBuB,EAFsB,KAETC,EAFS,KAM7B,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAOjD,KAAK,UACZ,kBAAC,EAAD,CAASuB,YAAa+D,EAAoB9D,YAAY,kCACtD,kBAAC,EAAD,CAAQpB,QAPM,WAChB6C,GAAe,IAMejD,KAAK,OAAOpB,KAAK,YAC7C,kBAAC,GAAD,CACEkE,aAAcyC,EACdvC,YAAaA,EACbC,eAAgBA,EAChBrE,KAAK,QAEP,kBAAC,EAAD,CAAQwB,QAASoF,EAAmBxF,KAAK,SAASpB,KAAK,gB,iHCxB7D,IAoDM6G,GAAYnF,IAAOC,IAAV,MAYAmF,GAhEQ,SAAC3F,GAAW,IACzBgE,EAA4DhE,EAA5DgE,OAAQ4B,EAAoD5F,EAApD4F,YAAaC,EAAuC7F,EAAvC6F,kBAAmBzB,EAAoBpE,EAApBoE,gBADhB,EAEQ1C,mBAAS,IAFjB,mBAEzBwC,EAFyB,KAEX4B,EAFW,OAGQpE,mBAAS,IAHjB,mBAGzBuC,EAHyB,KAGX8B,EAHW,KAiChC,OACE,kBAACL,GAAD,KACE,kBAAC,GAAD,CACEH,mBA/BqB,SAACS,GAC1B,IAAMC,EAAaD,EAAKzB,cACxBuB,EAAgBG,IA8BZR,kBAhBoB,WAKxBS,OAAOC,KAAKlC,GAAcjF,KAAI,SAACb,GAAD,OAAQ0H,EAAkB1H,OAYpDqH,kBAToB,SAACrC,GACzByC,EAAYzC,MAUV,kBAAC,GAAD,CACEa,OAAQA,EACRC,aAAcA,EACdC,aAAcA,EACdgB,eAAgBa,EAChB5B,iBAnCmB,SAAChB,GACxB,IAAMiC,EAAe,eAAOnB,GAExBmB,EAAgBjC,EAAShF,WACpBiH,EAAgBjC,EAAShF,IAEhCiH,EAAgBjC,EAAShF,IAAMgF,EAEjC4C,EAAgBX,IA4BZhB,gBAAiBA,MCvBVgC,GALQC,aApBC,SAAC1H,GACvB,MAAO,CACLqF,OAAQrF,MAIe,SAAC2H,GAC1B,MAAO,CACLV,YAAa,SAAC9G,GACZwH,EZPkB,SAACxH,GACvB,MAAO,CACLD,KAPqB,YAQrBC,SYIWyH,CAASzH,KAEpB+G,kBAAmB,SAAC/G,GAClBwH,EZFG,CACLzH,KAbwB,eAcxBV,GYAuBW,KAEvBsF,gBAAiB,SAACtF,GAChBwH,EZCmB,SAACxH,GACxB,MAAO,CACLD,KAnBsB,aAoBtBC,SYJWkE,CAAUlE,QAKFuH,CAGrBV,ICpBaa,GAJK,WAClB,OAAO,kBAAC,EAAD,CAAOvG,KAAK,kB,8XCCrB,IAsBME,GAAMI,IAAOC,IAAV,MAKE,SAACR,GAAD,OAAYA,EAAMyG,KAAO,OAAS,UACzB,SAACzG,GAAD,MACI,WAApBA,EAAM0G,UAAyB,SAAW,SAGxCzB,GAAQ1E,IAAOC,IAAV,KAMWC,GAEPkG,GAxCC,WACd,OACE,6BACE,kBAAC,EAAD,CAAO1G,KAAK,YACZ,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAKyG,UAAU,UACb,kBAAC,GAAD,6CACA,kBAAC,GAAD,KACE,yBAAKE,IAAI,gBAAgBC,IAAI,WAGjC,kBAAC,GAAD,CAAKH,UAAU,UACb,kBAAC,GAAD,iCACA,kBAAC,GAAD,CAAKD,MAAI,GAAT,UACA,kBAAC,GAAD,mDACA,kBAAC,GAAD,CAAKA,MAAI,GAAT,wB,sWCdV,IAAM9C,GAAQ,CACZmD,eAAgB,OAChBC,MAAO,QAeH5G,GAAMI,IAAOa,EAAV,KAKEX,EAAkBjB,KAEdiB,EAAiBpB,OACfoB,EAEEA,EAAwBA,EAEzBA,GACA,SAACT,GAAD,OACdA,EAAM6D,SAAW,gBAAkB,iBAUxBmD,GApCE,SAAChH,GAAW,IACnBC,EAAuCD,EAAvCC,KAAM4D,EAAiC7D,EAAjC6D,SAAUoD,EAAuBjH,EAAvBiH,GAAIC,EAAmBlH,EAAnBkH,eAE5B,OACE,kBAAC,GAAD,CAAKrD,SAAUA,GACb,kBAAC,IAAD,CAAMoD,GAAIA,EAAI5G,QAAS6G,EAAgBvD,MAAOA,IAC3C1D,K,+JCZT,IA6BME,GAAMI,IAAOC,IAAV,MAWM2G,GAxCI,SAACnH,GAAW,IAAD,EACE0B,oBAAS,GADX,mBACrB0F,EADqB,KACZC,EADY,KAEpBC,EAAkBtH,EAAlBsH,cACFJ,EAAiB,WACrBG,GAAYD,GAIVE,EAHGF,EAGW,cAFA,mBAKlB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEnH,KAAK,QACL4D,SAAUuD,EACVjJ,GAAG,iBACH+I,eAAgBA,IAElB,kBAAC,GAAD,CACEjH,KAAK,eACL9B,GAAG,cACH+I,eAAgBA,EAChBrD,UAAWuD,MCTJG,GAdM,WAAO,IAAD,EACiB7F,mBAAS,kBAD1B,mBAClB8F,EADkB,KACHC,EADG,KAEzB,OACE,6BACE,kBAAC,GAAD,CAAYH,cAAeG,IACR,mBAAlBD,EACC,kBAAC,GAAD,MAEA,kBAAC,GAAD,QCQOE,GAdC,WACd,OACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAWN,KACzD,kBAAC,IAAD,CAAOK,KAAK,iCAAiCC,UAAWzB,KACxD,kBAAC,IAAD,CACEwB,KAAK,uCACLC,UAAWrB,KAEb,kBAAC,IAAD,CAAOoB,KAAK,mCAAmCC,UAAWlB,O,mKCXhE,IAAMhD,GAAQ,CACZmD,eAAgB,QAGZgB,GAAY,WAChB,OACE,6BACE,kBAAC,IAAD,CAAMb,GAAG,iCAAiCtD,MAAOA,IAC/C,kBAAC,EAAD,CAAW1D,KAAK,WAElB,kBAAC,IAAD,CAAMgH,GAAG,uCAAuCtD,MAAOA,IACrD,kBAAC,EAAD,CAAW1D,KAAK,oBAiBlBE,GAAMI,IAAOC,IAAV,MAOMuH,GAlBE,WACf,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAMd,GAAG,4BAA4BtD,MAAOA,IAC1C,kBAAC,EAAD,OAEF,kBAAC,GAAD,Q,gWCvBN,IAKMqE,GAAOzH,IAAOC,IAAV,KAOOC,EACFA,EAAiBrB,QAErBqB,EAAkBjB,KAGXiB,EAAwBZ,KAC7BY,EAAkBhB,OAShBwI,GA5BC,SAACjI,GAAW,IAClBC,EAAkBD,EAAlBC,KAAMI,EAAYL,EAAZK,QACd,OAAO,kBAAC2H,GAAD,CAAM3H,QAASA,GAAUJ,I,2PCDlC,IAAM0D,GAAQ,CACZmD,eAAgB,QAGZoB,GAAW,SAAClI,GAAW,IACnBK,EAAYL,EAAZK,QACR,OACE,6BACE,kBAAC,IAAD,CAAM4G,GAAG,4BAA4BtD,MAAOA,IAC1C,kBAAC,GAAD,CAAS1D,KAAK,MAAM0E,IAAI,MAAMtE,QAASA,KAEzC,kBAAC,IAAD,CAAM4G,GAAG,mCAAmCtD,MAAOA,IACjD,kBAAC,GAAD,CAAS1D,KAAK,eAAe0E,IAAI,eAAetE,QAASA,KAE3D,kBAAC,IAAD,CAAM4G,GAAG,iCAAiCtD,MAAOA,IAC/C,kBAAC,GAAD,CAAS1D,KAAK,QAAQ0E,IAAI,QAAQtE,QAASA,KAE7C,kBAAC,IAAD,CAAM4G,GAAG,uCAAuCtD,MAAOA,IACrD,kBAAC,GAAD,CAAS1D,KAAK,eAAe0E,IAAI,eAAetE,QAASA,OAsB3DF,GAAMI,IAAOC,IAAV,MAQI,SAACR,GAAD,OAAYA,EAAMmI,OAAS,OAAS,WAalCC,GArCC,SAACpI,GAAW,IAClBqI,EAAoBrI,EAApBqI,OAAQhI,EAAYL,EAAZK,QAChB,OAAIgI,EAEA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAUhI,QAASA,KAKvB,kBAAC,GAAD,CAAK8H,QAAM,GACT,kBAAC,GAAD,Q,oXCnCN,IAsBMzC,GAAYnF,IAAOC,IAAV,KAOCC,EAAwBjB,KAC7BiB,EAAkBhB,OAGvB6I,GAAU/H,IAAOC,IAAV,KAGEC,EAAiBpB,QAGjBkJ,GAvCA,WAAO,IAAD,EACS7G,oBAAS,GADlB,mBACZ2G,EADY,KACJG,EADI,KAWnB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAACF,GAAD,CAASjI,QAXQ,WACnBmI,GAAWH,KAWP,uBAAGI,UAAU,iBAEf,kBAAC,GAAD,CAASJ,OAAQA,EAAQhI,QAVX,WAChBmI,GAAU,QCLdE,IAAMC,cAAc,SAeLC,OAbf,WACE,OACE,kBAAC,IAAD,CAAU3J,MAAOA,GACf,yBAAKwJ,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,UCqEUI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCtFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3a8a3e47.chunk.js","sourcesContent":["import { ADD_ISSUE, DELETE_ISSUE, EDIT_ISSUE } from './actions';\n\n// id: PropTypes.number.isRequired,\n// completed: PropTypes.bool.isRequired,\n// title: PropTypes.string.isRequired,\n// status: PropTypes.string.isRequired,\n// author: PropTypes.string.isRequired,\n// createdDate: PropTypes.string.isRequired,\n// updatedDate: PropTypes.string.isRequired,\n\nconst kariData = {\n  id: 'ore-gorira',\n  title: 'ore',\n  detail: 'meshi kuu',\n  status: 'banana',\n  author: 'umai',\n  createdDate: 'gorira',\n  updatedDate: 'gorira',\n};\n\nconst kariData2 = {\n  id: 'are-gorira',\n  title: 'are',\n  detail: 'meshi kuu',\n  status: 'banana',\n  author: 'umai',\n  createdDate: 'gorira',\n  updatedDate: 'gorira',\n};\n\nconst kariData3 = {\n  id: 'ure-gorira',\n  title: 'ure',\n  detail: 'meshi kuu',\n  status: 'banana',\n  author: 'umai',\n  createdDate: 'gorira',\n  updatedDate: 'gorira',\n};\n\nconst initialIssues = [kariData, kariData2, kariData3];\n\nconst issueReducer = (state = initialIssues, action) => {\n  switch (action.type) {\n    case ADD_ISSUE:\n      return [...state, action.issue];\n    case DELETE_ISSUE:\n      return state.filter((issue) => issue.id !== action.id);\n    case EDIT_ISSUE:\n      return state.map((issue) =>\n        issue.id === action.issue.id ? action.issue : issue\n      );\n    default:\n      return state;\n  }\n};\n\nexport default issueReducer;\n","// action types\nexport const ADD_ISSUE = 'ADD_ISSUE';\nexport const DELETE_ISSUE = 'DELETE_ISSUE';\nexport const EDIT_ISSUE = 'EDIT_ISSUE';\n\n// action creators\nexport const addIssue = (issue) => {\n  return {\n    type: ADD_ISSUE,\n    issue,\n  };\n};\n\nexport const deleteIssue = (id) => {\n  return {\n    type: DELETE_ISSUE,\n    id,\n  };\n};\n\nexport const editIssue = (issue) => {\n  return {\n    type: EDIT_ISSUE,\n    issue,\n  };\n};\n","import { createStore } from 'redux';\nimport issueReducer from './reducers';\n\nconst store = createStore(issueReducer);\n\nexport default store;\n","export default {\n  FONT_SIZE: { SMALL: 12, DEFAULT: 14, MIDDLE: 16, LARGE: 21, HEADER: 28 },\n  FONT_FAMILY: \"'Lato', sans-serif\",\n  FONT_COLOR: { DARK: '#586069', WHITE: '#fff' },\n  COLOR: { PRIMARY: 'rgb(66, 195, 96)', SECONDARY: 'rgb(215, 58, 73)' },\n  BACKGROUND_COLOR: {\n    DARK: '#333',\n    LIGHT: '#fafafa',\n    BLUE: '#0266d6',\n    LIGHTBLUE: '#f0f8ff',\n  },\n  BORDER_COLOR: 'rgb(225, 228, 232)',\n  BORDER_RADIUS: '6px',\n};\n","import styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nexport const TableCell = (props) => {\n  const { text, width } = props;\n  return <Div width={width}>{text}</Div>;\n};\n\nexport const TableCheckBoxCell = (props) => {\n  const { onClick, checked, width } = props;\n  return (\n    <Div onClick={onClick} width={width}>\n      <input type=\"checkbox\" checked={checked} />\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  display: block;\n  margin: 1px;\n  padding: 8px 4px;\n  width: ${(props) => (props.width ? props.width : '120px')};\n  color: #000;\n  font-size: ${Styles.FONT_SIZE.DEFAULT}px;\n  font-family: ${Styles.FONT_FAMILY};\n  border-bottom: 1px solid ${Styles.BORDER_COLOR};\n`;\n\nTableCell.propTypes = {\n  text: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n};\n\nTableCheckBoxCell.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  width: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nexport const Button = (props) => {\n  const { text, onClick, type } = props;\n  return (\n    <ButtonDiv onClick={onClick} type={type}>\n      {text}\n    </ButtonDiv>\n  );\n};\n\n// export const PrimaryButton = (props) => {\n//   const { text, onClick } = props;\n//   return (\n//     <ButtonDiv onClick={onClick} primary>\n//       {text}\n//     </ButtonDiv>\n//   );\n// };\n// export const SecondaryButton = (props) => {\n//   const { text, onClick } = props;\n//   return (\n//     <ButtonDiv onClick={onClick} secondary>\n//       {text}\n//     </ButtonDiv>\n//   );\n// };\n\nconst ButtonDiv = styled.div`\n  display: block;\n  cursor: pointer;\n  min-width: 70px;\n  padding: 6px 16px;\n  margin: 6px 4px;\n  text-align: center;\n  font-family: ${Styles.FONT_FAMILY};\n  font-size: ${Styles.FONT_SIZE.DEFAULT}px;\n  font-weight: 600;\n  border-radius: ${Styles.BORDER_RADIUS};\n  color: ${(props) =>\n    props.type === 'primary' || props.type === 'secondary' ? '#fff' : '#000'};\n  background: ${(props) =>\n    // eslint-disable-next-line no-nested-ternary\n    props.type === 'primary'\n      ? Styles.COLOR.PRIMARY\n      : props.type === 'secondary'\n      ? Styles.COLOR.SECONDARY\n      : null};\n  border-bottom: ${(props) =>\n    // eslint-disable-next-line no-nested-ternary\n    props.type === ' primary'\n      ? '2px solid rgb(40, 167, 69)'\n      : props.type === 'secondary'\n      ? '2px solid rgb(175, 28, 42)'\n      : null};\n`;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nexport const Label = (props) => {\n  const { text } = props;\n  return <H2>{text}</H2>;\n};\n\nexport const Logo = () => {\n  return <H1 href=\"\">Github Viewer</H1>;\n};\n\nexport const MenuLabel = (props) => {\n  const { text } = props;\n  return <H3 href=\"\">{text}</H3>;\n};\n\nconst H2 = styled.h2`\n  padding: 4px 0px;\n  margin: 4px;\n  color: #000;\n  font-size: ${Styles.FONT_SIZE.LARGE}px;\n  font-family: ${Styles.FONT_FAMILY};\n  font-weight: 700;\n`;\n\nconst H1 = styled.a`\n  padding: 4px;\n  margin: 4px;\n  text-decoration: none;\n  color: ${Styles.FONT_COLOR.WHITE};\n  font-size: ${Styles.FONT_SIZE.HEADER}px;\n  font-family: ${Styles.FONT_FAMILY};\n  font-weight: 800;\n`;\n\nconst H3 = styled.a`\n  padding: 4px;\n  margin: 4px;\n  text-decoration: none;\n  color: ${Styles.FONT_COLOR.WHITE};\n  font-size: ${Styles.FONT_SIZE.MIDDLE}px;\n  font-family: ${Styles.FONT_FAMILY};\n  font-weight: 600;\n`;\n\nLabel.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nMenuLabel.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nconst TextArea = (props) => {\n  const { getTheValue, placeholder, text } = props;\n  const [userInput, setUserInput] = useState(text);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setUserInput(value);\n    getTheValue(value);\n  };\n\n  return (\n    <Input\n      placeholder={placeholder}\n      id=\"userInput\"\n      name=\"userInput\"\n      value={userInput}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst Input = styled.textarea`\n  margin: 4px 16px;\n  padding: 8px;\n  color: #000;\n  width: 100%;\n  font-size: ${Styles.FONT_SIZE.DEFAULT}px;\n  font-family: ${Styles.FONT_FAMILY};\n  border-radius: ${Styles.BORDER_RADIUS};\n  border: 1px solid ${Styles.BORDER_COLOR};\n`;\n\nTextArea.propTypes = {\n  text: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  getTheValue: PropTypes.func.isRequired,\n};\n\nexport default TextArea;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nconst TextBar = (props) => {\n  const { getTheValue, placeholder, text } = props;\n  const [userInput, setUserInput] = useState(text);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    setUserInput(value);\n    getTheValue(value);\n  };\n\n  return (\n    <Input\n      placeholder={placeholder}\n      type=\"text\"\n      name=\"userInput\"\n      value={userInput}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst Input = styled.input`\n  margin: 4px 16px;\n  padding: 8px;\n  color: #000;\n  width: 100%;\n  font-size: ${Styles.FONT_SIZE.DEFAULT}px;\n  font-family: ${Styles.FONT_FAMILY};\n  border-radius: ${Styles.BORDER_RADIUS};\n  border: 1px solid ${Styles.BORDER_COLOR};\n`;\n\nTextBar.propTypes = {\n  text: PropTypes.string.isRequired,\n  getTheValue: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n\nexport default TextBar;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport { Button } from '../atoms/Button';\nimport { Label } from '../atoms/Label';\nimport TextArea from '../atoms/TextArea';\nimport TextBar from '../atoms/TextBar';\n\nconst TITLE = 'title';\nconst DETAIL = 'detail';\nconst customStyles = {\n  content: {\n    display: 'block',\n    width: '600px',\n    height: '60vh',\n    padding: '50px',\n    margin: '40vh auto',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst initialNewIssueState = {\n  id: '',\n  title: '',\n  detail: '',\n  status: 'open',\n  author: '',\n  createdDate: '',\n  updatedDate: '',\n};\n\nconst ModalDiv = (props) => {\n  const { handleSubmit, editIssue, isModalOpen, setIsModalOpen } = props;\n  const [newIssue, setNewIssue] = useState(editIssue || initialNewIssueState);\n  const headTitle = editIssue ? 'Issueを編集' : 'Issueを追加';\n  const buttonText = editIssue ? '更新' : 'New';\n  const isClose = newIssue.status === 'close';\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const submit = () => {\n    const createNewIssue = { ...newIssue };\n    if (!editIssue) {\n      createNewIssue.status = 'go';\n      createNewIssue.author = 'gi';\n      createNewIssue.createdDate = 'uma';\n      createNewIssue.id = createNewIssue.title + createNewIssue.createdDate;\n    }\n    createNewIssue.updatedDate = '今日';\n    handleSubmit(createNewIssue);\n    closeModal();\n  };\n\n  const updateTitle = (userInput) => {\n    const updateIssue = { ...newIssue };\n    updateIssue.title = userInput;\n    setNewIssue(updateIssue);\n  };\n\n  const updateDetail = (userInput) => {\n    const updateIssue = { ...newIssue };\n    updateIssue.detail = userInput;\n    setNewIssue(updateIssue);\n  };\n\n  const updateStatus = (event) => {\n    const { value } = event.target;\n    const updateIssue = { ...newIssue };\n    updateIssue.status = value;\n    setNewIssue(updateIssue);\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        <Label text={headTitle} />\n        <Label text=\"タイトル\" />\n        <TextBar\n          id={TITLE}\n          getTheValue={updateTitle}\n          text={newIssue.title}\n          placeholder=\"タイトルを入力してください\"\n        />\n        <Label text=\"説明\" />\n        <TextArea\n          id={DETAIL}\n          getTheValue={updateDetail}\n          text={newIssue.detail}\n          placeholder=\"説明を入力してください\"\n        />\n        <Div hide={!editIssue}>\n          ステータス\n          <select name=\"status\" onChange={updateStatus}>\n            <option value=\"open\">Open</option>\n            <option value=\"close\" selected={isClose}>\n              Close\n            </option>\n          </select>\n        </Div>\n        <Div>\n          <Button onClick={submit} text={buttonText} type=\"primary\" />\n          <Button onClick={closeModal} text=\"閉じる\" />\n        </Div>\n      </Modal>\n    </div>\n  );\n};\n\nconst Div = styled.div`\n  display: ${(props) => (props.hide ? 'none' : 'flex')};\n  margin: 8px;\n  padding: 0px;\n  width: 100%;\n  color: #000;\n  font-weight: ${(props) => (props.header ? 800 : 400)};\n`;\n\nModalDiv.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  editIssue: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      createdDate: PropTypes.string.isRequired,\n      updatedDate: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n};\n\nexport default ModalDiv;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\nimport { TableCell, TableCheckBoxCell } from '../atoms/TableCell';\nimport ModalDiv from './ModalDiv';\n\nexport const IssueList = (props) => {\n  const {\n    issues,\n    checkedIssue,\n    researchWord,\n    handleCheckIssue,\n    uploadEditIssue,\n  } = props;\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const filteredIssues = issues.filter((issue) => {\n    if (issue.title.toLowerCase().indexOf(researchWord) === -1) {\n      return false;\n    }\n    return issue;\n  });\n\n  const issueRows = filteredIssues.map((issue) => {\n    const { title, status, author, createdDate, updatedDate } = issue;\n    const handleClick = () => {\n      handleCheckIssue(issue);\n    };\n    return (\n      <Tr>\n        <TableCheckBoxCell\n          onClick={handleClick}\n          checked={checkedIssue[issue.id]}\n          width=\"50px\"\n        />\n        <Div key={title} onClick={openModal}>\n          <TableCell text={title} width=\"50%\" />\n          <TableCell text={status} />\n          <TableCell text={author} />\n          <TableCell text={createdDate} />\n          <TableCell text={updatedDate} />\n        </Div>\n        <ModalDiv\n          handleSubmit={uploadEditIssue}\n          isModalOpen={isModalOpen}\n          setIsModalOpen={setIsModalOpen}\n          type=\"edit\"\n          editIssue={issue}\n        />\n      </Tr>\n    );\n  });\n  if (filteredIssues.length === 0) {\n    const sentence = 'データがありません';\n    return (\n      <Div>\n        <TableCell text={sentence} width=\"100%\" />\n      </Div>\n    );\n  }\n  return issueRows;\n};\n\nconst TableHeader = (props) => {\n  const { onWholeCheck } = props;\n  const [checked, setChecked] = useState(false);\n  const onClick = () => {\n    onWholeCheck(!checked);\n    setChecked(!checked);\n  };\n  return (\n    <Tr>\n      <TableCheckBoxCell onClick={onClick} checked={checked} width=\"50px\" />\n      <Div header>\n        <TableCell text=\"\" width=\"50%\" />\n        <TableCell text=\"ステータス\" />\n        <TableCell text=\"作成者\" />\n        <TableCell text=\"作成日付\" />\n        <TableCell text=\"更新日付\" />\n      </Div>\n    </Tr>\n  );\n};\n\nconst Table = (props) => {\n  const {\n    issues,\n    researchWord,\n    checkedIssue,\n    handleCheckAll,\n    handleCheckIssue,\n    uploadEditIssue,\n  } = props;\n  const onCheckAll = (isChecked) => {\n    let newCheckedIssue = { ...checkedIssue };\n    if (isChecked) {\n      issues.forEach((issue) => (newCheckedIssue[issue.id] = issue));\n    } else {\n      newCheckedIssue = {};\n    }\n    handleCheckAll(newCheckedIssue);\n  };\n  return (\n    <TableContainer>\n      <TableHeader onWholeCheck={onCheckAll} />\n      <IssueList\n        issues={issues}\n        checkedIssue={checkedIssue}\n        researchWord={researchWord}\n        handleCheckIssue={handleCheckIssue}\n        uploadEditIssue={uploadEditIssue}\n      />\n    </TableContainer>\n  );\n};\n\nTable.propTypes = {\n  issues: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      createdDate: PropTypes.string.isRequired,\n      updatedDate: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  researchWord: PropTypes.string.isRequired,\n  uploadEditIssue: PropTypes.func.isRequired,\n  checkedIssue: PropTypes.func.isRequired,\n  handleCheckAll: PropTypes.func.isRequired,\n  handleCheckIssue: PropTypes.func.isRequired,\n};\n\nTableHeader.propTypes = {\n  onWholeCheck: PropTypes.func.isRequired,\n};\n\nIssueList.propTypes = {\n  issues: PropTypes.arrayOf().isRequired,\n  checkedIssue: PropTypes.obj,\n  researchWord: PropTypes.string.isRequired,\n  changeDeleteList: PropTypes.func.isRequired,\n  uploadEditIssue: PropTypes.func.isRequired,\n};\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  color: #000;\n  font-weight: ${(props) => (props.header ? 800 : 400)};\n  margin: 1px 0px;\n`;\nconst Tr = styled(Div)`\n  :hover {\n    background: ${Styles.BACKGROUND_COLOR.LIGHTBLUE};\n  }\n`;\n\nconst TableContainer = styled.div`\n  position: relative;\n  padding: 0px;\n  margin: 16px;\n  border: 1px solid ${Styles.BORDER_COLOR};\n  border-radius: ${Styles.BORDER_RADIUS};\n  background: #fff;\n  ::after {\n    position: absolute;\n    height: calc(100% + 12px);\n    width: calc(100% + 12px);\n    top: 0px;\n    left: 0px;\n    background: ${Styles.BACKGROUND_COLOR.LIGHT};\n    border: 1px solid ${Styles.BORDER_COLOR};\n    content: '';\n    z-index: -5;\n  }\n`;\n\nexport default Table;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import Modal from 'react-modal';\nimport { Button } from '../atoms/Button';\nimport { Label } from '../atoms/Label';\n// import TextArea from '../atoms/TextArea';\nimport TextBar from '../atoms/TextBar';\nimport ModalDiv from './ModalDiv';\n\n// const TITLE = 'title';\n// const DETAIL = 'detail';\n\nconst IssueHeader = (props) => {\n  const { setNewResearchWord, submitAddNewIssue, submitDeleteIssue } = props;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  return (\n    <Div>\n      <Label text=\"Issue\" />\n      <TextBar getTheValue={setNewResearchWord} placeholder=\"issue名で検索\" />\n      <Button onClick={openModal} text=\"Open\" type=\"primary\" />\n      <ModalDiv\n        handleSubmit={submitAddNewIssue}\n        isModalOpen={isModalOpen}\n        setIsModalOpen={setIsModalOpen}\n        type=\"new\"\n      />\n      <Button onClick={submitDeleteIssue} text=\"Delete\" type=\"secondary\" />\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  display: flex;\n  margin: 8px;\n  padding: 0px;\n  width: 100%;\n  color: #000;\n  font-weight: ${(props) => (props.header ? 800 : 400)};\n`;\n\nIssueHeader.propTypes = {\n  setNewResearchWord: PropTypes.func.isRequired,\n  submitAddNewIssue: PropTypes.func.isRequired,\n  submitDeleteIssue: PropTypes.func.isRequired,\n};\n\nexport default IssueHeader;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../molecules/Table';\nimport IssueHeader from '../molecules/IssueHeader';\n\nconst IndexStructure = (props) => {\n  const { issues, addNewIssue, deleteChosenIssue, uploadEditIssue } = props;\n  const [researchWord, setResearchWord] = useState('');\n  const [checkedIssue, setCheckedIssue] = useState({});\n\n  const setNewResearchWord = (word) => {\n    const filterWord = word.toLowerCase();\n    setResearchWord(filterWord);\n  };\n\n  const handleCheckIssue = (newIssue) => {\n    const newCheckedIssue = {...checkedIssue};\n    // debugger\n    if (newCheckedIssue[newIssue.id]) {\n      delete newCheckedIssue[newIssue.id];\n    } else {\n      newCheckedIssue[newIssue.id] = newIssue;\n    }\n    setCheckedIssue(newCheckedIssue);\n  };\n\n  const submitDeleteIssue = () => {\n    // eslint-disable-next-line no-plusplus\n    // for (let i = 0; i < deleteList.length; i++) {\n    //   deleteChosenIssue(deleteList[i]);\n    // }\n    Object.keys(checkedIssue).map((id) => deleteChosenIssue(id));\n  };\n\n  const submitAddNewIssue = (newIssue) => {\n    addNewIssue(newIssue);\n  };\n\n  return (\n    <Container>\n      <IssueHeader\n        setNewResearchWord={setNewResearchWord}\n        submitDeleteIssue={submitDeleteIssue}\n        submitAddNewIssue={submitAddNewIssue}\n      />\n      <Table\n        issues={issues}\n        checkedIssue={checkedIssue}\n        researchWord={researchWord}\n        handleCheckAll={setCheckedIssue}\n        handleCheckIssue={handleCheckIssue}\n        uploadEditIssue={uploadEditIssue}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  max-width: 896px;\n  margin: 0 auto;\n`;\n\nIndexStructure.propTypes = {\n  issues: PropTypes.arrayOf().isRequired,\n  addNewIssue: PropTypes.func.isRequired,\n  deleteChosenIssue: PropTypes.func.isRequired,\n  uploadEditIssue: PropTypes.func.isRequired,\n};\n\nexport default IndexStructure;\n","import { connect } from 'react-redux';\nimport { addIssue, deleteIssue, editIssue } from '../actions';\nimport IndexStructure from '../components/organisms/IndexStructure';\n\nconst mapStateToProps = (state) => {\n  return {\n    issues: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNewIssue: (issue) => {\n      dispatch(addIssue(issue));\n    },\n    deleteChosenIssue: (issue) => {\n      dispatch(deleteIssue(issue));\n    },\n    uploadEditIssue: (issue) => {\n      dispatch(editIssue(issue));\n    },\n  };\n};\n\nconst IssueContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndexStructure);\n\nexport default IssueContainer;\n","import React from 'react';\nimport { Label } from '../atoms/Label';\n\nconst PullRequest = () => {\n  return <Label text=\"Pull Request\" />;\n};\n\nexport default PullRequest;\n","import styled from 'styled-components';\nimport React from 'react';\nimport Styles from '../Styles';\nimport { Label } from '../atoms/Label';\n\nconst Profile = () => {\n  return (\n    <div>\n      <Label text=\"Profile\" />\n      <Table>\n        <Div direction=\"column\">\n          <Div>プロフィール</Div>\n          <Div>\n            <img src=\"../img/ui.png\" alt=\"icon\" />\n          </Div>\n        </Div>\n        <Div direction=\"column\">\n          <Div>ユーザ名</Div>\n          <Div bold>Tomona</Div>\n          <Div>メールアドレス</Div>\n          <Div bold>kari@example.com</Div>\n        </Div>\n      </Table>\n    </div>\n  );\n};\n\nconst Div = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px;\n  font-size: 0.95em;\n  color: ${(props) => (props.bold ? '#000' : '#444')};\n  flex-direction: ${(props) =>\n    props.direction === 'column' ? 'column' : 'row'};\n`;\n\nconst Table = styled.div`\n  display: flex;\n  min-width: 400px;\n  width: 80%;\n  max-width: 600px;\n  margin: 50px auto;\n  border: 1px solid ${Styles.BORDER_COLOR};\n`;\nexport default Profile;\n","import styled from 'styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nconst style = {\n  textDecoration: 'none',\n  color: '#000',\n};\n\nconst TabIndex = (props) => {\n  const { text, selected, to, changeSelected } = props;\n\n  return (\n    <Div selected={selected}>\n      <Link to={to} onClick={changeSelected} style={style}>\n        {text}\n      </Link>\n    </Div>\n  );\n};\n\nconst Div = styled.a`\n  padding: 16px;\n  margin: 20px 0px;\n  width: 100%;\n  text-decoration: none;\n  color: ${Styles.FONT_COLOR.DARK};\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE.MIDDLE}px;\n  font-family: ${Styles.FONT_FAMILY};\n  font-weight: 600;\n  border-radius: ${Styles.BORDER_RADIUS} ${Styles.BORDER_RADIUS} 0px 0px;\n  border-style: solid;\n  border-color: ${Styles.BORDER_COLOR};\n  border-width: ${(props) =>\n    props.selected ? '1px 1px 0 1px' : '0 0 1px 0px'};\n`;\n\nTabIndex.propTypes = {\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  to: PropTypes.string.isRequired,\n  changeSelected: PropTypes.func.isRequired,\n};\n\nexport default TabIndex;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TabIndex from '../atoms/TabIndex';\n\nconst TabIndices = (props) => {\n  const [isIssue, setIsIssue] = useState(true);\n  const { changeCurrent } = props;\n  const changeSelected = () => {\n    setIsIssue(!isIssue);\n    if (!isIssue) {\n      changeCurrent('IssueContainer');\n    } else {\n      changeCurrent('PullRequest');\n    }\n  };\n  return (\n    <Div>\n      <TabIndex\n        text=\"Issue\"\n        selected={isIssue}\n        id=\"IssueContainer\"\n        changeSelected={changeSelected}\n      />\n      <TabIndex\n        text=\"Pull Request\"\n        id=\"PullRequest\"\n        changeSelected={changeSelected}\n        selected={!isIssue}\n      />\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 1000px;\n  margin: 16px auto;\n`;\n\nTabIndices.propTypes = {\n  changeCurrent: PropTypes.func.isRequired,\n};\n\nexport default TabIndices;\n","import React, { useState } from 'react';\nimport IssueContainer from '../../container/IssueContainer';\nimport TabIndices from '../molecules/TabIndices';\nimport PullRequest from './PullRequest';\n\nconst IssueWithTab = () => {\n  const [currentActive, setCurrentActive] = useState('IssueContainer');\n  return (\n    <div>\n      <TabIndices changeCurrent={setCurrentActive} />\n      {currentActive === 'IssueContainer' ? (\n        <IssueContainer />\n      ) : (\n        <PullRequest />\n      )}\n    </div>\n  );\n};\n\nexport default IssueWithTab;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport IssueContainer from '../../container/IssueContainer';\nimport PullRequest from './PullRequest';\nimport Profile from './Profile';\nimport IssueWithTab from './IssueWithTab';\n\nconst Toppage = () => {\n  return (\n    <div>\n      <Route exact path=\"react-redux-githubViewer/\" component={IssueWithTab} />\n      <Route path=\"react-redux-githubViewer/issue\" component={IssueContainer} />\n      <Route\n        path=\"react-redux-githubViewer/pullRequest\"\n        component={PullRequest}\n      />\n      <Route path=\"react-redux-githubViewer/profile\" component={Profile} />\n    </div>\n  );\n};\n\nexport default Toppage;\n","import styled from 'styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Logo, MenuLabel } from '../atoms/Label';\n\nconst style = {\n  textDecoration: 'none',\n};\n\nconst MenuItems = () => {\n  return (\n    <div>\n      <Link to=\"react-redux-githubViewer/issue\" style={style}>\n        <MenuLabel text=\"Issue\" />\n      </Link>\n      <Link to=\"react-redux-githubViewer/pullRequest\" style={style}>\n        <MenuLabel text=\"Pull Request\" />\n      </Link>\n    </div>\n  );\n};\n\nconst MenuList = () => {\n  return (\n    <Div>\n      <Link to=\"react-redux-githubViewer/\" style={style}>\n        <Logo />\n      </Link>\n      <MenuItems />\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 8px 16px;\n`;\n\nexport default MenuList;\n","import styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Styles from '../Styles';\n\nconst NavItem = (props) => {\n  const { text, onClick } = props;\n  return <Item onClick={onClick}>{text}</Item>;\n};\n\nconst Item = styled.div`\n  display: block;\n  cursor: pointer;\n  padding: 10px 8px;\n  text-decolation: none;\n  margin: 0px;\n  text-align: left;\n  font-family: ${Styles.FONT_FAMILY};\n  font-size: ${Styles.FONT_SIZE.DEFAULT}px;\n  font-weight: 600;\n  color: ${Styles.FONT_COLOR.DARK};\n  background: #fff;\n  :hover {\n    background: ${Styles.BACKGROUND_COLOR.BLUE};\n    color: ${Styles.FONT_COLOR.WHITE};\n  }\n`;\n\nNavItem.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default NavItem;\n","import styled from 'styled-components';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NavItem from '../atoms/NavItem';\n\nconst style = {\n  textDecoration: 'none',\n};\n\nconst NavItems = (props) => {\n  const { onClick } = props;\n  return (\n    <div>\n      <Link to=\"react-redux-githubViewer/\" style={style}>\n        <NavItem text=\"Top\" key=\"Top\" onClick={onClick} />\n      </Link>\n      <Link to=\"react-redux-githubViewer/profile\" style={style}>\n        <NavItem text=\"Your Profile\" key=\"Your Profile\" onClick={onClick} />\n      </Link>\n      <Link to=\"react-redux-githubViewer/issue\" style={style}>\n        <NavItem text=\"Issue\" key=\"Issue\" onClick={onClick} />\n      </Link>\n      <Link to=\"react-redux-githubViewer/pullRequest\" style={style}>\n        <NavItem text=\"Pull Request\" key=\"Pull Request\" onClick={onClick} />\n      </Link>\n    </div>\n  );\n};\n\nconst NavList = (props) => {\n  const { toggle, onClick } = props;\n  if (toggle) {\n    return (\n      <Div>\n        <NavItems onClick={onClick} />\n      </Div>\n    );\n  }\n  return (\n    <Div hidden>\n      <NavItems />\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50px;\n  padding: 8px 0px;\n  width: 200px;\n  background: #fff;\n  box-shadow: 3px 3px 3px #eee;\n  display: ${(props) => (props.hidden ? 'none' : 'block')};\n  z-index: 500;\n`;\n\nNavList.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nNavItems.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default NavList;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport Styles from '../Styles';\nimport MenuList from '../molecules/MenuList';\nimport NavList from '../molecules/NavList';\n\nconst Header = () => {\n  const [toggle, setToggle] = useState(false);\n\n  const changeToggle = () => {\n    setToggle(!toggle);\n  };\n\n  const closeMenu = () => {\n    setToggle(false);\n  };\n\n  return (\n    <Container>\n      <MenuList />\n      <Awesome onClick={changeToggle}>\n        <i className=\"fas fa-bars\" />\n      </Awesome>\n      <NavList toggle={toggle} onClick={closeMenu} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin: 0 auto;\n  background: ${Styles.BACKGROUND_COLOR.DARK};\n  color: ${Styles.FONT_COLOR.WHITE};\n`;\n\nconst Awesome = styled.div`\n  display: block;\n  padding: 16px;\n  font-size: ${Styles.FONT_SIZE.MIDDLE};\n`;\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Modal from 'react-modal';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport Toppage from './components/pages/Toppage';\nimport Header from './components/organisms/Header';\n\nModal.setAppElement('#root');\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Toppage />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}